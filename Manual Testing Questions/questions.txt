1. what is Software Testing ?
Software Testing is a method to check whether the actual software product matches expected 
requirements and to ensure that software product is Defect free. 
It involves execution of software/system components using manual or automated tools to 
evaluate one or more properties of interest. The purpose of software testing is to identify errors, 
gaps or missing requirements in contrast to actual requirements.

2. What is Functional Testing?
functional testing is a type of software testing that validates the software system
against the functional requirements/specifications. The purpose of Functional tests is to test
each function of the software application, by providing appropriate input, verifying the output 
against the Functional requirements.
Functional testing mainly involves black box testing and it is not concerned 
about the source code of the application. 
This testing checks User Interface, APIs, Database, Security, 
Client/Server communication and other functionality of the Application Under Test. 
The testing can be done either manually or using automation.


3. what is Non functional Testing ?
Non-Functional Testing is defined as a type of Software testing to check non-functional 
aspects such as performance measure, response time
usability, reliability, etc is taken into consideration.

4. what is white box testing ?
white box testing is done by the developer mainly by looking at the code at the time of
developement.

5. what is BlackBox testing?
it is a testing which is done with out looking at the code.
(without having knowledge of source code) and it is entirely based on software requirements 
and specifications. 
It is also known as Behavioral Testing.

6. Types of Testing and unit Testing ?
there are two types of testing:
i. Manual Testing:
    Testing which is done manually.
ii. Automated Testing 
    Testing which is done using Tools or Scripts.

Unit Testing is a type of software testing where individual units or 
components of a software are tested. The purpose is to validate that each unit 
of the software code performs as expected.

7. what is compound testing ?
testing a module is known as compound testing.

8. smoke testing ?
testing a basic and critical features of application before doing thorough and regress testing is
called smoke testing. its check if all components are working or not.
It is done when application is new it is done for quick check.

9. sanity Testing ?
it is done for old application and it is used to check all the modules and sub-modules are 
working or not of old application after receiving build. sanity testing is quick and non-exhaustive

10. difference between smoke and sanity testing ?
somke:
i. This testing is performed by the developers or testers.
ii. Smoke testing is usually documented or scripted	
iii. Smoke testing is a subset of Acceptance testing	

sanity:
i. Sanity testing in software testing is usually performed by testers
ii. Sanity testing is usually not documented and is unscripted
iii. Sanity testing is a subset of Regression Testing.

11. Regression Testing ?
Testing a fetaure that is already tested to verify that the recent changes does not affected the 
working functionality of the application by re-running functional and non-functional tests to 
ensure that previously developed and tested software still performs after a change.

12. What is User Acceptance Testing (UAT) ?
User Acceptance Testing (UAT) is a type of testing performed by the end user or the client to 
verify/accept the software system before moving the software application to the production environment. 
UAT is done in the final phase of testing after functional, integration and system testing is done. 

12. what is Interface Testing ?


13. What is Integration Testing?
Integration Testing is defined as a type of testing where software modules are integrated 
logically and tested as a group. A typical software project consists of multiple software modules, 
coded by different programmers. The purpose of this level of testing is to expose defects in the 
interaction between these software modules when they are integrated.

14. What is System Testing?
System Testing is a level of testing that validates the complete and fully integrated software product. 
The purpose of a system test is to evaluate the end-to-end system specifications. Usually, 
the software is only one element of a larger computer-based system. Ultimately, the software is 
interfaced with other software/hardware systems. System Testing is defined as a series of different 
tests whose sole purpose is to exercise the full computer-based system.